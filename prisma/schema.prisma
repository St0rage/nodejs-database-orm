generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Customer {
  id       String     @id @db.VarChar(100)
  name     String     @db.VarChar(100)
  email    String     @unique @db.VarChar(100)
  phone    String     @unique @db.VarChar(100)
  comments Comment[]
  likes    Like[]
  wallet   Wallet?
  products Product[]  @relation("loves")

  @@map("customers")
}

model Like {
  customer_id String   @db.VarChar(100)
  product_id  String   @db.VarChar(100)
  customers   Customer @relation(fields: [customer_id], references: [id])
  products    Product  @relation(fields: [product_id], references: [id])

  @@id([customer_id, product_id])
  @@map("likes")
}

model Product {
  id        String     @id @db.VarChar(100)
  name      String     @db.VarChar(100)
  price     Int
  stock     Int        @db.SmallInt
  category  String     @db.VarChar(100)
  likes     Like[]
  customers Customer[] @relation("loves")

  @@map("products")
}

model Sample {
  id               String  @id @db.VarChar(100)
  name             String  @db.VarChar(100)
  description      String? @db.Text
  full_description String? @db.Text

  @@map("sample")
}

model Wallet {
  id          String   @id @db.VarChar(100)
  balance     Int
  customer_id String   @unique @db.VarChar(100)
  customers   Customer @relation(fields: [customer_id], references: [id])

  @@map("wallet")
}

model Category {
  id   Int    @id @default(autoincrement())
  name String @db.VarChar(100)

  @@map("categories")
}

model Comment {
  id          Int      @id @default(autoincrement())
  customer_id String   @db.VarChar(100)
  title       String   @db.VarChar(100)
  description String?
  customers   Customer @relation(fields: [customer_id], references: [id])

  @@map("comments")
}
